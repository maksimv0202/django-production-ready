services:
  backend:
    container_name: backend
    hostname: backend
    build:
      context: .
      dockerfile: ./services/backend/Dockerfile
    volumes:
      - static:/home/python/services/backend/static
      - media:/home/python/services/backend/media
    networks:
      - main
    command: bash -c "./scripts/docker-entrypoint.sh && gunicorn --workers 1 --bind 0.0.0.0:8080 config.wsgi:application"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    hostname: postgres
    restart: always
    networks:
      - main
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
volumes:
  static:
  media:
  postgres:
networks:
  main:
    driver: bridge